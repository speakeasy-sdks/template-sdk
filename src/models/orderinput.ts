/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { OrderType, OrderType$ } from "./ordertype";
import { z } from "zod";

/**
 * An order for a drink or ingredient.
 */
export type OrderInput = {
    /**
     * The product code of the drink or ingredient.
     */
    productCode: string;
    /**
     * The number of units of the drink or ingredient to order.
     */
    quantity: number;
    /**
     * The type of order.
     */
    type: OrderType;
};

/** @internal */
export namespace OrderInput$ {
    export type Inbound = {
        productCode: string;
        quantity: number;
        type: OrderType;
    };

    export const inboundSchema: z.ZodType<OrderInput, z.ZodTypeDef, Inbound> = z
        .object({
            productCode: z.string(),
            quantity: z.number().int(),
            type: OrderType$,
        })
        .transform((v) => {
            return {
                productCode: v.productCode,
                quantity: v.quantity,
                type: v.type,
            };
        });

    export type Outbound = {
        productCode: string;
        quantity: number;
        type: OrderType;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, OrderInput> = z
        .object({
            productCode: z.string(),
            quantity: z.number().int(),
            type: OrderType$,
        })
        .transform((v) => {
            return {
                productCode: v.productCode,
                quantity: v.quantity,
                type: v.type,
            };
        });
}
